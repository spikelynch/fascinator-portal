## Prepare Java objects using refactoring to read config from a json file
##Get Fascinator Home Path
#set($fascinatorHomePathMethod = $component-type.getClass().forName("com.googlecode.fascinator.common.FascinatorHome").getMethod("getPath"))
#set($fascinatorHome = $fascinatorHomePathMethod.invoke(null))

##Get Class types for relevant constructors
#set($fileClass = $component-type.getClass().forName("java.io.File"))
#set($stringClass = $component-type.getClass().forName("java.lang.String"))
#set($fileUtilsClass = $component-type.getClass().forName("org.apache.commons.io.FileUtils"))

##get Constructors to invoke
#set($fileClassConstructor = $fileClass.getConstructor($stringClass))
#set($readFileToStringMethod = $fileUtilsClass.getMethod("readFileToString",$fileClass))

##invoke File constructor to create File Object for json file
#set($jsonFilePath = ${fascinatorHome}+"/"+$option-data)
#set($fileObject = $fileClassConstructor.newInstance($jsonFilePath))

#if($box-for)<span #if( $multiline )style="display:block;" #end>#displayMessage($box-for)</span>#end

### create checkboxes from JSON inside the place holder div
<div id="data-source-checkbox-$field-name"></div>

<script>
$(document).ready(function() {
	  var data = $readFileToStringMethod.invoke(null,$fileObject);
		var s = jQuery("[id='data-source-checkbox-$field-name']");
		for(var val in data) {
			var item = data[val];
			var n = parseInt(val) + 1;
			var id = '${field-name}.'+ n;
			var box = $('<input />', { type: 'checkbox', id: id, value: item.value, name: '$field-name', class: 'jaffa-field' });
			if (item.checked) { box.attr("checked", "checked"); }
			box.appendTo(s);
			jaffa.form.addField(id);
			$('<label />', { 'for': id, text: item.label, style:"display:inline-block" #if($additional-classes) ,class:"$additional-classes" #end }).appendTo(s);
		#if($saveLabel)
			id = '${field-name}:prefLabel.' + n;
			$('<input />', { type: 'hidden', id: id, value: item.label, name: id, class: 'jaffa-field' }).appendTo(s);
			jaffa.form.addField(id);
		#end
			#if( $multiline ) $('<br>').appendTo(s); #end
		}

});
</script>
